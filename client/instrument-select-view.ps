;; -*- mode: lisp -*-
(load "macros.ps")
(load "utils.ps")

(defview *Instrument-select-name-view
    model 'sample
    init (lambda (model index)
           (this.create 'index index))
    events (create
            'click (lambda (e)
                     (this.trigger 'instrument-select this.sample)))

    render (lambda ()
             (let ((html
                    (+ (hex ((@ this index))) ": " ((@ (@ this sample) name)))
                    ))
               ((@ this $el html) html))))

(defview *Instrument-select-view
    model 'song
    init (lambda ()
           (setf (@ this samples) ((@ this song instruments)))
           ((@ this samples on) :add (@ this rebuild-views) this)
           ((@ this samples on) :remove (@ this rebuild-views) this)
           ((@ this samples on) :modify (@ this rebuild-views) this)
           ((@ this rebuild-views))

           (this.on 'instrument-select (lambda (e)
                                         (this.deselect)
                                         (this.select e.value)
                                         t))
           )

    deselect (lambda ()
               (this.map (lambda (name-view)
                           ((@ name-view $el remove-class) "InstrumentSelected"))))
    select (lambda (sample)
             (let ((view (this.find (lambda (name-view)
                                      (= (@ name-view sample) sample)))))
               ((@ view $el add-class) "InstrumentSelected")))

    rebuild-views (lambda ()
                    (this.clear)
                    (let ((i -1))
                      ((@ this samples map)
                       (lambda (sample)
                         (incf i)
                         (this.add (@ (new (*View *Instrument-select-name-view sample i))) t))
                       this))
                    (this.render))

    render (lambda ()
             (let* ((html (this.map (lambda (name-view)
                                      (@ name-view $el)))
                             ))
               ((@ html unshift) (+ "Instruments: "
                                     (hex (@ ((@ this song instruments)) length))))
             ((@ this $el html) html))))
